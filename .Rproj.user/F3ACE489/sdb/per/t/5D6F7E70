{
    "collab_server" : "",
    "contents" : "\n\nlibrary(dplyr)\n\nfileName <- 'C:/Users/MoradaAO/Documents/MELD Calculator Files/Liver Transplant.zip'\nsetwd('C:/Users/MoradaAO/Documents/MELD Calculator Files/')\nlabs<- read.csv(unzip(fileName, files = \"Report 1.csv\"),header = T, skip = 2)\ntxp <- read.csv(unzip(fileName, files = \"Report 2.csv\"), header = T, skip = 2)\nhd <- read.csv(unzip(fileName, files = \"Report 3.csv\"), header = T, skip = 2)\n\n## Combining Hemodialysis and Lab Tables\n#Cleaning Hemodialysis Table\nhd <- select(hd, -ICD.Procedure.End.Date)\nhd$Test.Result <- 1\ncolnames(hd) <- c(\"Medical.Record.Number..MRN.\",\"Result.Date\",\"Result.Component.Common.Name\",\"Test.Result\")\nhd$Result.Date <- as.Date(hd$Result.Date, \"%m/%d/%Y\")\n\n#Cleaning Lab Table\nlabs$Result.Date <- as.Date(labs$Result.Date, \"%m/%d/%y\")\nlabs$Test.Result <- as.numeric(levels(labs$Test.Result))[labs$Test.Result]\nlabs <- aggregate(labs$Test.Result, by=list(labs$Medical.Record.Number..MRN.,labs$Result.Date,labs$Result.Component.Common.Name), FUN = mean, na.rm =TRUE)\ncolnames(labs) <- c(\"Medical.Record.Number..MRN.\",\"Result.Date\",\"Result.Component.Common.Name\",\"Test.Result\")\n\n\n#Row binding hemodialysis and lab tables\nvars <- rbind(hd,labs)\nrm(labs,hd)\nvars$Test.Result <- as.numeric(vars$Test.Result)\n\n##Creating Table\ntxp <- select(txp, -ICD.Procedure.End.Date)\ntxp$ICD.Procedure.Start.Date <- as.Date(txp$ICD.Procedure.Start.Date, \"%m/%d/%Y\")\n\ndaycap <- 30\ndf <- as.data.frame(matrix(NA, nrow(txp), daycap+1))\ncolnames(df) <- -daycap:0\n\ntxp <- cbind(txp,df)\n\n##MELD Calculator\npt <- NA\ndt <- NA\nfill <- NA\nbili <- NA\ncreat <- NA\ninr <- NA\nsodium <- NA\ndial <- NA\n\n\n\n\nfor(r in 1:nrow(txp)){\n     for(c in 4:ncol(txp)){\n         qday <- as.numeric(colnames(txp[c]))\n         pt <- txp$Medical.Record.Number..MRN.[r]\n         dt <- txp$ICD.Procedure.Start.Date[r]\n         fill <- filter(vars, vars$Medical.Record.Number..MRN.==pt)\n         fill$day <-as.numeric(fill$Result.Date-dt)\n         #Bili\n         if (nrow(filter(fill, fill$day == qday & fill$Result.Component.Common.Name == \"BILIRUBIN TOTAL\")) == 1){\n              bili <- filter(fill, fill$day == qday & fill$Result.Component.Common.Name == \"BILIRUBIN TOTAL\")$Test.Result\n         } else {\n              bili <- NA\n              }\n         #Creat\n         if (nrow(filter(fill, fill$day == qday & fill$Result.Component.Common.Name == \"CREATININE\")) == 1){\n              creat <- filter(fill, fill$day == qday & fill$Result.Component.Common.Name == \"CREATININE\")$Test.Result\n         } else {\n              creat <- NA\n              }\n         #INR\n         if (nrow(filter(fill, fill$day == qday & fill$Result.Component.Common.Name == \"INR\")) == 1){\n              inr <- filter(fill, fill$day == qday & fill$Result.Component.Common.Name == \"INR\")$Test.Result\n         } else {\n              inr <- NA\n              }   \n         #Sodium\n         if (nrow(filter(fill, fill$day == qday & fill$Result.Component.Common.Name == \"SODIUM\")) == 1){\n              sodium <- filter(fill, fill$day == qday & fill$Result.Component.Common.Name == \"SODIUM\")$Test.Result\n         } else {\n              sodium <- NA\n              }    \n         #Hemodialysis status\n         if (sum(fill$Result.Component.Common.Name == \"HEMODIALYSIS\" & fill$day < qday & fill$day > (qday-7)) >= 2){\n              dial <- TRUE \n              print(paste(c,sum(fill$Result.Component.Common.Name == \"HEMODIALYSIS\" & fill$day < qday & fill$day > (qday-7))))\n         } else  {\n              dial <- FALSE\n         }\n         ## Value check and MELD calculator execution\n         if (is.na(bili)|is.na(creat)|is.na(inr)|is.na(sodium)){\n              txp[r,c] <- NA\n         } else {\n              if (bili < 1){bili <- 1}\n              if (inr < 1){inr <- 1 }\n              if (sodium < 125 ){\n                   sodium <- 125\n              } else if(sodium > 137){\n                   sodium <- 137\n              }\n              \n              if (dial == TRUE){\n                   creat <- 4\n              } else if (creat < 1){\n                   creat <- 1\n              } else if (creat > 4){\n                   creat <- 4\n              }\n              \n              # MELD and NaMELD Calculator\n              MELD <- round(11.2*log(inr) + 9.57*log(creat)+3.78*log(bili)+6.43)\n              MELDNa <- round(MELD + 1.32*(137-sodium)- (0.033*MELD*(137-sodium)))\n              txp[r,c] <- MELDNa\n              }\n         \n     }\n}\n\nwrite.csv(txp, file = \"Liver MELD Scores-30 Days- 04132017.csv\", row.names = F, na = \"\")\n\n\n\n",
    "created" : 1492040864642.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2905833476",
    "id" : "5D6F7E70",
    "lastKnownWriteTime" : 1492107004,
    "last_content_update" : 1492107004296,
    "path" : "~/GitHub/MELD-Calculator/MELD Calculator Script.R",
    "project_path" : "MELD Calculator Script.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}